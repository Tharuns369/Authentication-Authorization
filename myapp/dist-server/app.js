"use strict";

var createError = require('http-errors');
var express = require('express');
var path = require('path');
var cookieParser = require('cookie-parser');
var logger = require('morgan');
var indexRouter = require('./routes/index');
var usersRouter = require('./routes/users');
var app = express();

// view engine setup
// app.set('views', path.join(__dirname, 'views'));

// app.use(express.static(path.join(__dirname, 'public')));

// Set 'views' directory for any views 
// being rendered res.render()
app.set('views', path.join(__dirname, 'views'));
app.set('view engine', 'hbs');
app.use(logger('dev'));
app.use(express.json());
app.use(express.urlencoded({
  extended: false
}));
app.use(cookieParser());
app.use(express.static(path.join(__dirname, 'public')));
app.use('/', indexRouter);
app.use('/users', usersRouter);

// catch 404 and forward to error handler
app.use(function (req, res, next) {
  next(createError(404));
});

// error handler
app.use(function (err, req, res, next) {
  // set locals, only providing error in development
  res.locals.message = err.message;
  res.locals.error = req.app.get('env') === 'development' ? err : {};

  // render the error page
  res.status(err.status || 500);
  res.render('error');
});
module.exports = app;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjcmVhdGVFcnJvciIsInJlcXVpcmUiLCJleHByZXNzIiwicGF0aCIsImNvb2tpZVBhcnNlciIsImxvZ2dlciIsImluZGV4Um91dGVyIiwidXNlcnNSb3V0ZXIiLCJhcHAiLCJzZXQiLCJqb2luIiwiX19kaXJuYW1lIiwidXNlIiwianNvbiIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsInN0YXRpYyIsInJlcSIsInJlcyIsIm5leHQiLCJlcnIiLCJsb2NhbHMiLCJtZXNzYWdlIiwiZXJyb3IiLCJnZXQiLCJzdGF0dXMiLCJyZW5kZXIiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiLi4vc2VydmVyL2FwcC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgY3JlYXRlRXJyb3IgPSByZXF1aXJlKCdodHRwLWVycm9ycycpO1xudmFyIGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG52YXIgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcbnZhciBjb29raWVQYXJzZXIgPSByZXF1aXJlKCdjb29raWUtcGFyc2VyJyk7XG52YXIgbG9nZ2VyID0gcmVxdWlyZSgnbW9yZ2FuJyk7XG5cbnZhciBpbmRleFJvdXRlciA9IHJlcXVpcmUoJy4vcm91dGVzL2luZGV4Jyk7XG52YXIgdXNlcnNSb3V0ZXIgPSByZXF1aXJlKCcuL3JvdXRlcy91c2VycycpO1xudmFyIGFwcCA9IGV4cHJlc3MoKTtcblxuLy8gdmlldyBlbmdpbmUgc2V0dXBcbi8vIGFwcC5zZXQoJ3ZpZXdzJywgcGF0aC5qb2luKF9fZGlybmFtZSwgJ3ZpZXdzJykpO1xuXG4vLyBhcHAudXNlKGV4cHJlc3Muc3RhdGljKHBhdGguam9pbihfX2Rpcm5hbWUsICdwdWJsaWMnKSkpO1xuXG4vLyBTZXQgJ3ZpZXdzJyBkaXJlY3RvcnkgZm9yIGFueSB2aWV3cyBcbi8vIGJlaW5nIHJlbmRlcmVkIHJlcy5yZW5kZXIoKVxuYXBwLnNldCgndmlld3MnLCBwYXRoLmpvaW4oX19kaXJuYW1lLCAndmlld3MnKSk7XG5hcHAuc2V0KCd2aWV3IGVuZ2luZScsICdoYnMnKTtcblxuYXBwLnVzZShsb2dnZXIoJ2RldicpKTtcbmFwcC51c2UoZXhwcmVzcy5qc29uKCkpO1xuYXBwLnVzZShleHByZXNzLnVybGVuY29kZWQoeyBleHRlbmRlZDogZmFsc2UgfSkpO1xuYXBwLnVzZShjb29raWVQYXJzZXIoKSk7XG5hcHAudXNlKGV4cHJlc3Muc3RhdGljKHBhdGguam9pbihfX2Rpcm5hbWUsICdwdWJsaWMnKSkpO1xuXG5hcHAudXNlKCcvJywgaW5kZXhSb3V0ZXIpO1xuYXBwLnVzZSgnL3VzZXJzJywgdXNlcnNSb3V0ZXIpO1xuXG4vLyBjYXRjaCA0MDQgYW5kIGZvcndhcmQgdG8gZXJyb3IgaGFuZGxlclxuYXBwLnVzZShmdW5jdGlvbihyZXEsIHJlcywgbmV4dCkge1xuICBuZXh0KGNyZWF0ZUVycm9yKDQwNCkpO1xufSk7XG5cblxuXG4vLyBlcnJvciBoYW5kbGVyXG5hcHAudXNlKGZ1bmN0aW9uKGVyciwgcmVxLCByZXMsIG5leHQpIHtcbiAgLy8gc2V0IGxvY2Fscywgb25seSBwcm92aWRpbmcgZXJyb3IgaW4gZGV2ZWxvcG1lbnRcbiAgcmVzLmxvY2Fscy5tZXNzYWdlID0gZXJyLm1lc3NhZ2U7XG4gIHJlcy5sb2NhbHMuZXJyb3IgPSByZXEuYXBwLmdldCgnZW52JykgPT09ICdkZXZlbG9wbWVudCcgPyBlcnIgOiB7fTtcblxuICAvLyByZW5kZXIgdGhlIGVycm9yIHBhZ2VcbiAgcmVzLnN0YXR1cyhlcnIuc3RhdHVzIHx8IDUwMCk7XG4gIHJlcy5yZW5kZXIoJ2Vycm9yJyk7XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBhcHA7XG4iXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSUEsV0FBVyxHQUFHQyxPQUFPLENBQUMsYUFBYSxDQUFDO0FBQ3hDLElBQUlDLE9BQU8sR0FBR0QsT0FBTyxDQUFDLFNBQVMsQ0FBQztBQUNoQyxJQUFJRSxJQUFJLEdBQUdGLE9BQU8sQ0FBQyxNQUFNLENBQUM7QUFDMUIsSUFBSUcsWUFBWSxHQUFHSCxPQUFPLENBQUMsZUFBZSxDQUFDO0FBQzNDLElBQUlJLE1BQU0sR0FBR0osT0FBTyxDQUFDLFFBQVEsQ0FBQztBQUU5QixJQUFJSyxXQUFXLEdBQUdMLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQztBQUMzQyxJQUFJTSxXQUFXLEdBQUdOLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQztBQUMzQyxJQUFJTyxHQUFHLEdBQUdOLE9BQU8sRUFBRTs7QUFFbkI7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0FNLEdBQUcsQ0FBQ0MsR0FBRyxDQUFDLE9BQU8sRUFBRU4sSUFBSSxDQUFDTyxJQUFJLENBQUNDLFNBQVMsRUFBRSxPQUFPLENBQUMsQ0FBQztBQUMvQ0gsR0FBRyxDQUFDQyxHQUFHLENBQUMsYUFBYSxFQUFFLEtBQUssQ0FBQztBQUU3QkQsR0FBRyxDQUFDSSxHQUFHLENBQUNQLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUN0QkcsR0FBRyxDQUFDSSxHQUFHLENBQUNWLE9BQU8sQ0FBQ1csSUFBSSxFQUFFLENBQUM7QUFDdkJMLEdBQUcsQ0FBQ0ksR0FBRyxDQUFDVixPQUFPLENBQUNZLFVBQVUsQ0FBQztFQUFFQyxRQUFRLEVBQUU7QUFBTSxDQUFDLENBQUMsQ0FBQztBQUNoRFAsR0FBRyxDQUFDSSxHQUFHLENBQUNSLFlBQVksRUFBRSxDQUFDO0FBQ3ZCSSxHQUFHLENBQUNJLEdBQUcsQ0FBQ1YsT0FBTyxDQUFDYyxNQUFNLENBQUNiLElBQUksQ0FBQ08sSUFBSSxDQUFDQyxTQUFTLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQztBQUV2REgsR0FBRyxDQUFDSSxHQUFHLENBQUMsR0FBRyxFQUFFTixXQUFXLENBQUM7QUFDekJFLEdBQUcsQ0FBQ0ksR0FBRyxDQUFDLFFBQVEsRUFBRUwsV0FBVyxDQUFDOztBQUU5QjtBQUNBQyxHQUFHLENBQUNJLEdBQUcsQ0FBQyxVQUFTSyxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsSUFBSSxFQUFFO0VBQy9CQSxJQUFJLENBQUNuQixXQUFXLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDeEIsQ0FBQyxDQUFDOztBQUlGO0FBQ0FRLEdBQUcsQ0FBQ0ksR0FBRyxDQUFDLFVBQVNRLEdBQUcsRUFBRUgsR0FBRyxFQUFFQyxHQUFHLEVBQUVDLElBQUksRUFBRTtFQUNwQztFQUNBRCxHQUFHLENBQUNHLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHRixHQUFHLENBQUNFLE9BQU87RUFDaENKLEdBQUcsQ0FBQ0csTUFBTSxDQUFDRSxLQUFLLEdBQUdOLEdBQUcsQ0FBQ1QsR0FBRyxDQUFDZ0IsR0FBRyxDQUFDLEtBQUssQ0FBQyxLQUFLLGFBQWEsR0FBR0osR0FBRyxHQUFHLENBQUMsQ0FBQzs7RUFFbEU7RUFDQUYsR0FBRyxDQUFDTyxNQUFNLENBQUNMLEdBQUcsQ0FBQ0ssTUFBTSxJQUFJLEdBQUcsQ0FBQztFQUM3QlAsR0FBRyxDQUFDUSxNQUFNLENBQUMsT0FBTyxDQUFDO0FBQ3JCLENBQUMsQ0FBQztBQUVGQyxNQUFNLENBQUNDLE9BQU8sR0FBR3BCLEdBQUcifQ==